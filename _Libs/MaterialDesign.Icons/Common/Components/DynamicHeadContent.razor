@using MaterialDesign.Icons.Exceptions
@implements IDynamicComponentContent

@code {
    [Parameter, EditorRequired] 
    public RenderFragment? ChildContent { get; set; }

    public static event Action? OnChange;

    private static List<RenderFragment> Content { get; } = [];
    public static List<RenderFragment> GetContent() => Content;

    protected override void OnInitialized()
    {
        if (ChildContent is null)
            throw new ComponentException($"{nameof(DynamicHeadContent)} should have child content to add to the head.");
        
        Content.Add(ChildContent);
        OnChange?.Invoke();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        
        if (!DynamicHeadOutlet.OutletExists())
        {
            throw new ComponentException($"No {nameof(DynamicHeadOutlet)} components exist. If this seems wrong, " +
                                         "please check the order of your builder RootComponent setting so that " +
                                         "the body of the page (usually labelled `App`) is added after " +
                                         "calling `AddDynamicMaterialIcons()`.");
        }
    }

}