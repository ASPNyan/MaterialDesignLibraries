@using MaterialDesign.Theming.Web.CSS
@using MaterialDesign.Theming.Injection
@implements IDisposable
@inject ThemeContainer ThemeContainer

<link rel="stylesheet" href="@Path.Combine(ContentPathRoot, "css/colors.module.css")">

@if (Scheme.IsDarkScheme)
{
    <link rel="stylesheet" href="@Path.Combine(ContentPathRoot, "css/theme.dark.css")">
}
else
{
    <link rel="stylesheet" href="@Path.Combine(ContentPathRoot, "css/theme.light.css")">
}

<ThemeCSSTokens Scheme="@Scheme"/>

@code {
    private IScheme Scheme => ThemeContainer.Scheme;

    private async void OnChange() => await InvokeAsync(StateHasChanged);
    
    protected override void OnInitialized()
    {
        ThemeContainer.OnSchemeUpdate += OnChange;
    }

    public void Dispose()
    {
        ThemeContainer.OnSchemeUpdate -= OnChange;
    }

}