@using MaterialDesign.Color.Colorspaces
@using MaterialDesign.Theming.Injection
@using Microsoft.Extensions.DependencyInjection
@inject IServiceProvider ServiceProvider

@{
    Scheme ??= ServiceProvider.GetService<ThemeContainer>()?.Scheme;
    if (Scheme is null) throw new Exception("Theme is null after getting from Service Provider");
}

<style>
    :root {
        --md-sys-color-primary-light: @RGBA(Scheme.Primary);
        --md-sys-color-primary-light-text: @RGBA(Text(Scheme.Primary));
        --md-sys-color-on-primary-light: @RGBA(Scheme.OnPrimary);
        --md-sys-color-on-primary-light-text: @RGBA(Text(Scheme.OnPrimary));
        --md-sys-color-primary-container-light: @RGBA(Scheme.PrimaryContainer);
        --md-sys-color-primary-container-light-text: @RGBA(Text(Scheme.PrimaryContainer));
        --md-sys-color-on-primary-container-light: @RGBA(Scheme.OnPrimaryContainer);
        --md-sys-color-on-primary-container-light-text: @RGBA(Text(Scheme.OnPrimaryContainer));
        --md-sys-color-secondary-light: @RGBA(Scheme.Secondary);
        --md-sys-color-secondary-light-text: @RGBA(Text(Scheme.Secondary));
        --md-sys-color-on-secondary-light: @RGBA(Scheme.OnSecondary);
        --md-sys-color-on-secondary-light-text: @RGBA(Text(Scheme.OnSecondary));
        --md-sys-color-secondary-container-light: @RGBA(Scheme.SecondaryContainer);
        --md-sys-color-secondary-container-light-text: @RGBA(Text(Scheme.SecondaryContainer));
        --md-sys-color-on-secondary-container-light: @RGBA(Scheme.OnSecondaryContainer);
        --md-sys-color-on-secondary-container-light-text: @RGBA(Text(Scheme.OnSecondaryContainer));
        --md-sys-color-tertiary-light: @RGBA(Scheme.Tertiary);
        --md-sys-color-tertiary-light-text: @RGBA(Text(Scheme.Tertiary));
        --md-sys-color-on-tertiary-light: @RGBA(Scheme.OnTertiary);
        --md-sys-color-on-tertiary-light-text: @RGBA(Text(Scheme.OnTertiary));
        --md-sys-color-tertiary-container-light: @RGBA(Scheme.TertiaryContainer);
        --md-sys-color-tertiary-container-light-text: @RGBA(Text(Scheme.TertiaryContainer));
        --md-sys-color-on-tertiary-container-light: @RGBA(Scheme.OnTertiaryContainer);
        --md-sys-color-on-tertiary-container-light-text: @RGBA(Text(Scheme.OnTertiaryContainer));
        --md-sys-color-error-light: @RGBA(Scheme.Error);
        --md-sys-color-error-light-text: @RGBA(Text(Scheme.Error));
        --md-sys-color-error-container-light: @RGBA(Scheme.ErrorContainer);
        --md-sys-color-error-container-light-text: @RGBA(Text(Scheme.ErrorContainer));
        --md-sys-color-on-error-light: @RGBA(Scheme.OnError);
        --md-sys-color-on-error-light-text: @RGBA(Text(Scheme.OnError));
        --md-sys-color-on-error-container-light: @RGBA(Scheme.OnErrorContainer);
        --md-sys-color-on-error-container-light-text: @RGBA(Text(Scheme.OnErrorContainer));
        --md-sys-color-background-light: @RGBA(Scheme.Background);
        --md-sys-color-background-light-text: @RGBA(Text(Scheme.Background));
        --md-sys-color-on-background-light: @RGBA(Scheme.OnBackground);
        --md-sys-color-on-background-light-text: @RGBA(Text(Scheme.OnBackground));
        --md-sys-color-surface-light: @RGBA(Scheme.Surface);
        --md-sys-color-surface-light-text: @RGBA(Text(Scheme.Surface));
        --md-sys-color-on-surface-light: @RGBA(Scheme.OnSurface);
        --md-sys-color-on-surface-light-text: @RGBA(Text(Scheme.OnSurface));
        --md-sys-color-surface-variant-light: @RGBA(Scheme.SurfaceVariant);
        --md-sys-color-surface-variant-light-text: @RGBA(Text(Scheme.SurfaceVariant));
        --md-sys-color-on-surface-variant-light: @RGBA(Scheme.OnSurfaceVariant);
        --md-sys-color-on-surface-variant-light-text: @RGBA(Text(Scheme.OnSurfaceVariant));
        --md-sys-color-outline-light: @RGBA(Scheme.Outline);
        --md-sys-color-outline-light-text: @RGBA(Text(Scheme.Outline));
        --md-sys-color-inverse-on-surface-light: @RGBA(Scheme.OnSurfaceInverse);
        --md-sys-color-inverse-on-surface-light-text: @RGBA(Text(Scheme.OnSurfaceInverse));
        --md-sys-color-inverse-surface-light: @RGBA(Scheme.SurfaceInverse);
        --md-sys-color-inverse-surface-light-text: @RGBA(Text(Scheme.SurfaceInverse));
        --md-sys-color-inverse-primary-light: @RGBA(new HCTA(Scheme.Primary.H, Scheme.Primary.C, 80));
        --md-sys-color-inverse-primary-light-text: @RGBA(Text(new HCTA(Scheme.Primary.H, Scheme.Primary.C, 80)));
        --md-sys-color-shadow-light: @(new RGBA(0, 0, 0));
        --md-sys-color-shadow-light-text: @(new RGBA(0, 0, 0));
        --md-sys-color-surface-tint-light: @RGBA(Scheme.SurfaceVariant);
        --md-sys-color-surface-tint-light-text: @RGBA(Text(Scheme.SurfaceVariant));
        --md-sys-color-outline-variant-light: @RGBA(Scheme.OutlineVariant);
        --md-sys-color-outline-variant-light-text: @RGBA(Text(Scheme.OutlineVariant));
        --md-sys-color-scrim-light: @(new RGBA(0, 0, 0));
        --md-sys-color-scrim-light-text: @(new RGBA(0, 0, 0));
        
        --md-sys-color-primary-dark: @RGBA(Scheme.Primary);
        --md-sys-color-primary-dark-text: @RGBA(Text(Scheme.Primary));
        --md-sys-color-on-primary-dark: @RGBA(Scheme.OnPrimary);
        --md-sys-color-on-primary-dark-text: @RGBA(Text(Scheme.OnPrimary));
        --md-sys-color-primary-container-dark: @RGBA(Scheme.PrimaryContainer);
        --md-sys-color-primary-container-dark-text: @RGBA(Text(Scheme.PrimaryContainer));
        --md-sys-color-on-primary-container-dark: @RGBA(Scheme.OnPrimaryContainer);
        --md-sys-color-on-primary-container-dark-text: @RGBA(Text(Scheme.OnPrimaryContainer));
        --md-sys-color-secondary-dark: @RGBA(Scheme.Secondary);
        --md-sys-color-secondary-dark-text: @RGBA(Text(Scheme.Secondary));
        --md-sys-color-on-secondary-dark: @RGBA(Scheme.OnSecondary);
        --md-sys-color-on-secondary-dark-text: @RGBA(Text(Scheme.OnSecondary));
        --md-sys-color-secondary-container-dark: @RGBA(Scheme.SecondaryContainer);
        --md-sys-color-secondary-container-dark-text: @RGBA(Text(Scheme.SecondaryContainer));
        --md-sys-color-on-secondary-container-dark: @RGBA(Scheme.OnSecondaryContainer);
        --md-sys-color-on-secondary-container-dark-text: @RGBA(Text(Scheme.OnSecondaryContainer));
        --md-sys-color-tertiary-dark: @RGBA(Scheme.Tertiary);
        --md-sys-color-tertiary-dark-text: @RGBA(Text(Scheme.Tertiary));
        --md-sys-color-on-tertiary-dark: @RGBA(Scheme.OnTertiary);
        --md-sys-color-on-tertiary-dark-text: @RGBA(Text(Scheme.OnTertiary));
        --md-sys-color-tertiary-container-dark: @RGBA(Scheme.TertiaryContainer);
        --md-sys-color-tertiary-container-dark-text: @RGBA(Text(Scheme.TertiaryContainer));
        --md-sys-color-on-tertiary-container-dark: @RGBA(Scheme.OnTertiaryContainer);
        --md-sys-color-on-tertiary-container-dark-text: @RGBA(Text(Scheme.OnTertiaryContainer));
        --md-sys-color-error-dark: @RGBA(Scheme.Error);
        --md-sys-color-error-dark-text: @RGBA(Text(Scheme.Error));
        --md-sys-color-error-container-dark: @RGBA(Scheme.ErrorContainer);
        --md-sys-color-error-container-dark-text: @RGBA(Text(Scheme.ErrorContainer));
        --md-sys-color-on-error-dark: @RGBA(Scheme.OnError);
        --md-sys-color-on-error-dark-text: @RGBA(Text(Scheme.OnError));
        --md-sys-color-on-error-container-dark: @RGBA(Scheme.OnErrorContainer);
        --md-sys-color-on-error-container-dark-text: @RGBA(Text(Scheme.OnErrorContainer));
        --md-sys-color-background-dark: @RGBA(Scheme.Background);
        --md-sys-color-background-dark-text: @RGBA(Text(Scheme.Background));
        --md-sys-color-on-background-dark: @RGBA(Scheme.OnBackground);
        --md-sys-color-on-background-dark-text: @RGBA(Text(Scheme.OnBackground));
        --md-sys-color-surface-dark: @RGBA(Scheme.Surface);
        --md-sys-color-surface-dark-text: @RGBA(Text(Scheme.Surface));
        --md-sys-color-on-surface-dark: @RGBA(Scheme.OnSurface);
        --md-sys-color-on-surface-dark-text: @RGBA(Text(Scheme.OnSurface));
        --md-sys-color-surface-variant-dark: @RGBA(Scheme.SurfaceVariant);
        --md-sys-color-surface-variant-dark-text: @RGBA(Text(Scheme.SurfaceVariant));
        --md-sys-color-on-surface-variant-dark: @RGBA(Scheme.OnSurfaceVariant);
        --md-sys-color-on-surface-variant-dark-text: @RGBA(Text(Scheme.OnSurfaceVariant));
        --md-sys-color-outline-dark: @RGBA(Scheme.Outline);
        --md-sys-color-outline-dark-text: @RGBA(Text(Scheme.Outline));
        --md-sys-color-inverse-on-surface-dark: @RGBA(Scheme.OnSurfaceInverse);
        --md-sys-color-inverse-on-surface-dark-text: @RGBA(Text(Scheme.OnSurfaceInverse));
        --md-sys-color-inverse-surface-dark: @RGBA(Scheme.SurfaceInverse);
        --md-sys-color-inverse-surface-dark-text: @RGBA(Text(Scheme.SurfaceInverse));
        --md-sys-color-inverse-primary-dark: @RGBA(new HCTA(Scheme.Primary.H, Scheme.Primary.C, 80));
        --md-sys-color-inverse-primary-dark-text: @RGBA(Text(new HCTA(Scheme.Primary.H, Scheme.Primary.C, 80)));
        --md-sys-color-shadow-dark: @(new RGBA(0, 0, 0));
        --md-sys-color-shadow-dark-text: @(new RGBA(0, 0, 0));
        --md-sys-color-surface-tint-dark: @RGBA(Scheme.SurfaceVariant);
        --md-sys-color-surface-tint-dark-text: @RGBA(Text(Scheme.SurfaceVariant));
        --md-sys-color-outline-variant-dark: @RGBA(Scheme.OutlineVariant);
        --md-sys-color-outline-variant-dark-text: @RGBA(Text(Scheme.OutlineVariant));
        --md-sys-color-scrim-dark: @(new RGBA(0, 0, 0));
        --md-sys-color-scrim-dark-text: @(new RGBA(0, 0, 0));
        
        --md-sys-color-primary-fixed: @RGBA(Scheme.PrimaryFixed);
        --md-sys-color-primary-fixed-text: @RGBA(Text(Scheme.PrimaryFixed));
        --md-sys-color-on-primary-fixed: @RGBA(Scheme.OnPrimaryFixed);
        --md-sys-color-on-primary-fixed-text: @RGBA(Text(Scheme.OnPrimaryFixed));
        --md-sys-color-secondary-fixed: @RGBA(Scheme.SecondaryFixed);
        --md-sys-color-secondary-fixed-text: @RGBA(Text(Scheme.SecondaryFixed));
        --md-sys-color-on-secondary-fixed: @RGBA(Scheme.OnSecondaryFixed);
        --md-sys-color-on-secondary-fixed-text: @RGBA(Text(Scheme.OnSecondaryFixed));
        --md-sys-color-tertiary-fixed: @RGBA(Scheme.TertiaryFixed);
        --md-sys-color-tertiary-fixed-text: @RGBA(Text(Scheme.TertiaryFixed));
        --md-sys-color-on-tertiary-fixed: @RGBA(Scheme.OnTertiaryFixed);
        --md-sys-color-on-tertiary-fixed-text: @RGBA(Text(Scheme.OnTertiaryFixed));
        
        --md-sys-color-primary-fixed-dim: @RGBA(Scheme.PrimaryFixedDim);
        --md-sys-color-primary-fixed-dim-text: @RGBA(Text(Scheme.PrimaryFixedDim));
        --md-sys-color-secondary-fixed-dim: @RGBA(Scheme.SecondaryFixedDim);
        --md-sys-color-secondary-fixed-dim-text: @RGBA(Text(Scheme.SecondaryFixedDim));
        --md-sys-color-tertiary-fixed-dim: @RGBA(Scheme.TertiaryFixedDim);
        --md-sys-color-tertiary-fixed-dim-text: @RGBA(Text(Scheme.TertiaryFixedDim));
        --md-sys-color-surface-dim: @RGBA(Scheme.SurfaceDim);
        --md-sys-color-surface-dim-text: @RGBA(Text(Scheme.SurfaceDim));
        --md-sys-color-surface-bright: @RGBA(Scheme.SurfaceBright);
        --md-sys-color-surface-bright-text: @RGBA(Text(Scheme.SurfaceBright));
        
        --md-sys-color-surface-container-highest: @RGBA(Scheme.SurfaceContainerHighest);
        --md-sys-color-surface-container-highest-text: @RGBA(Text(Scheme.SurfaceContainerHighest));
        --md-sys-color-surface-container-high: @RGBA(Scheme.SurfaceContainerHigh);
        --md-sys-color-surface-container-high-text: @RGBA(Text(Scheme.SurfaceContainerHigh));
        --md-sys-color-surface-container: @RGBA(Scheme.SurfaceContainer);
        --md-sys-color-surface-container-text: @RGBA(Text(Scheme.SurfaceContainer));
        --md-sys-color-surface-container-low: @RGBA(Scheme.SurfaceContainerLow);
        --md-sys-color-surface-container-low-text: @RGBA(Text(Scheme.SurfaceContainerLow));
        --md-sys-color-surface-container-lowest: @RGBA(Scheme.SurfaceContainerLowest);
        --md-sys-color-surface-container-lowest-text: @RGBA(Text(Scheme.SurfaceContainerLowest));
    }
</style>

@code
{
    /// <summary>
    /// The theme provided to create the tokens.
    /// </summary>
    [Parameter]
    public IScheme? Scheme { get; set; }
    
    private static RGBA RGBA(HCTA color) => color.ToRGBA();
    private HCTA Text(HCTA color) => Scheme?.GetTextColor(color) ?? color;
}