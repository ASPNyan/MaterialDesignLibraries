@using MaterialDesign.Web.Exceptions
@using MaterialDesign.Web.Services
@implements IDisposable
@inject DynamicHeadStorage Storage

@code {
    [Parameter, EditorRequired] 
    public RenderFragment? ChildContent { get; set; }

    protected override void OnInitialized()
    {
        if (ChildContent is null)
            throw new ComponentException($"{nameof(DynamicHeadContent)} should have child content to add to the head.");
        
        Storage.UpdateContent(ChildContent);
    }

    protected override void OnAfterRender(bool firstRender) => Storage.InvokeUpdate();

    public void Dispose()
    {
        if (ChildContent is not null) Storage.Remove(ChildContent);
    }
}