@using MaterialDesign.Theming.Web.CSS
@using MaterialDesign.Theming.Web.MudBlazor
@using MaterialDesign.Web.Services
@inherits LayoutComponentBase
@implements IDisposable
@inject ThemeContainer ThemeContainer
@inject NavigationManager Nav
@inject DynamicHeadStorage HeadStorage
@rendermode InteractiveServer

<DynamicHeadContent>
    <link rel="stylesheet" href="css/MainLayout.css">
</DynamicHeadContent>

<MdMudThemeProvider/>

<MdIconConfig Weight="400" Grade="0" LineStyle="MdIconLineStyle.Rounded" OpticalSize="24" Fill="true">
    <MudLayout>
        <MudLayoutComponents Body="Body"/>
    </MudLayout>
</MdIconConfig>

@code {
    public const string DividerStyleLeft = $"margin-right: auto; {DividerStyle}";
    public const string DividerStyle = $"border-color: var({ThemeCSSTokens.OnSecondaryContainerCSSToken});";
    public const string DividerStyleRight = $"margin-left: auto; {DividerStyle}";
    
    public static string DrawerId { get; } = Guid.NewGuid().ToString();
    public static string AppBarId { get; } = Guid.NewGuid().ToString();
    
    private bool DrawerOpen { get; set; }

    private void ToggleDrawer()
    {
        DrawerOpen = !DrawerOpen;
        StateHasChanged();
    }

    private void OnUpdate() => InvokeAsync(StateHasChanged);
    
    protected override void OnInitialized()
    {
        ThemeContainer.OnSchemeUpdate += OnUpdate;
    }

    public void Dispose()
    {
        ThemeContainer.OnSchemeUpdate -= OnUpdate;
    }
}