@using MaterialDesign.Icons
@using MaterialDesign.Theming.Web.MudBlazor
@using MusicApp.Services
@inherits LayoutComponentBase
@implements IDisposable
@inject ScopedSettings Settings

<DynamicHeadContent>
    <link rel="stylesheet" href="css/AppLayout.css">
</DynamicHeadContent>

<MdMudThemeProvider/>

<MdIconConfig Fill="false" Weight="300" Grade="0" OpticalSize="40" LineStyle="@MdIconLineStyle.Sharp">
    <div id="GridLayout" class="surface-variant secondary-text @Settings.CurrentFontClass" style="font-weight: @Settings.FontWeight">
        <div id="Top" class="surface-variant on-surface-variant-text"><DynamicComponentOutlet Id="@TopId"/></div>
        <div id="Left" class="surface-variant on-surface-variant-text"><DynamicComponentOutlet Id="@LeftId"/></div>
        <main class="surface-container">@Body</main>
        <div id="Bottom" class="on-tertiary-fixed tertiary-fixed-dim-text">
            <PlayingSongInfo />
        </div>
    </div>
</MdIconConfig>

@code {
    public const string TopId = "TopComponentId";
    public const string LeftId = "LeftComponentId";
    public const string BottomId = "BottomComponentId";

    private async void OnUpdate() => await InvokeAsync(StateHasChanged);
    
    protected override void OnInitialized()
    {
        Settings.OnFontUpdate += OnUpdate;
    }

    public void Dispose()
    {
        Settings.OnFontUpdate -= OnUpdate;
    }
}