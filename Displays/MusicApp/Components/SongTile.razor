@using MusicApp.Enums
@using MaterialDesign.Icons
@using MusicApp.Services
@inject SongInfoContainer SongInfoContainer

<div class="Song @TileStyle.ToString() @GetBackgroundClass() primary-text">
    @if (TileStyle is SongTileStyle.Comfy)
    {
        <img src="@Info.AlbumCoverUrl" alt="" class="SongBackground">
    }
    <img src="@Info.AlbumCoverUrl" alt="Album Cover of @(Info.Author)'s @Info.Album" class="SongCover">
    <p class="SongCover SongPlayButtonContainer" @onclick="Select">
        <MdIcon Icon="Play Arrow" class="SongPlayButton" Fill="true" LineStyle="@MdIconLineStyle.Rounded"/>
    </p>
    <b class="SongTitle">
        @if (TileStyle is SongTileStyle.Comfy)
        {
            @Info.Name
        }
        else
        {
            @Info.Name <br/>
            <span class="SongTitleSubtext secondary-text">@Info.Author</span>
        }
    </b>
    <p class="SongAlbum tertiary-text">@Info.Album</p>
    @if (TileStyle is SongTileStyle.Comfy)
    {
        <p class="SongArtist">
            @Info.Author
        </p>
    }
</div>

@code {
    [Parameter] 
    public SongInfo Info { get; set; }
    
    [Parameter]
    public SongTileStyle TileStyle { get; set; }

    private string GetBackgroundClass()
    {
        if (TileStyle is SongTileStyle.Compact) return "on-primary";
        return string.Empty;
    }
    
    private void Select()
    {
        SongInfoContainer.Update(Info);
    }
}